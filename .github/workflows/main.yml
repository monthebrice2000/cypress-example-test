
name: Deploy to GitHub pages
on:
  push:
    branches: [ "master" ]

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Generate static files
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      #      - run: npm ci
      # - run: npm run build
      #      - name: Run Tests E2E
      #        run: npm run cypress:run
      #      - name: Generate Report
      #        run: npm run allure:report
      - name: Get if branch exist
        run: |
          TEST=$(git fetch origin gh-page && echo true || echo false)
          echo "BRANCH_IS_EXISTING=${TEST}" >> $GITHUB_ENV
          echo ----------------- ${{env.BRANCH_IS_EXISTING}} ------------------------
          echo ----------------- ${TEST} ${BRANCH_IS_EXISTING} ------------------------
      - name: Delete branch gh-page if exists
        if: env.BRANCH_IS_EXISTING
        run: |
          echo '------------delete gh-page branch ${{env.BRANCH_IS_EXISTING}} --------------'
          git push origin --delete gh-page
      - name: Init new repo in dist folder and commit generated files
        run: |
          ls
          echo '---------------------'
          git config --local user.email "monthedjeumoubrice2000@gmail.com"
          git config --local user.name "monthebrice2000"
          git branch
          git branch gh-page
          git switch gh-page
          git branch
          shopt -s extglob
          rm -rf -- !(allure-report)
          ls
          echo '---------------------'
          cp -r ./allure-report/* ./
          ls
          rm -rf ./allure-report
          git add -A
          git commit -m 'deploy'
          git push origin gh-page
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy:
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    # Allow one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: true
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
